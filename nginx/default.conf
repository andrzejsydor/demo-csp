server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}

# with Content Security Policy (CSP) enabled(and a browser that supports it(http://caniuse.com/#feat=contentsecuritypolicy),
# you can tell the browser that it can only download content from the domains you explicitly allow
# http://www.html5rocks.com/en/tutorials/security/content-security-policy/
# https://www.owasp.org/index.php/Content_Security_Policy
# I need to change our application code so we can increase security by disabling 'unsafe-inline' 'unsafe-eval'
# directives for css and js(if you have inline css or js, you will need to keep it too).
# more: http://www.html5rocks.com/en/tutorials/security/content-security-policy/#inline-code-considered-harmful
    # add_header Content-Security-Policy "default-src 'self' 'unsafe-inline'; font-src 'allow'";

    # Angular minimal configuration
    # add_header Content-Security-Policy "default-src 'self'";

    add_header Content-Securit-Policy "default-src 'sha256-a40885804760b461ba9047378e3abef4a760b4b2c7e831987d814ddf9efc25f7' 'sha256-da7c56855876bf24bc7b6d04b09b8186b19e4d28b8ddea8d5a4535e7bd2a3ee2' 'sha256-bafe87d8cd868963604e9b508f9b6946a6121e50f27c2f8cc287334406c6bba3' 'sha256-b94a021dd9a30bedd86b0fa6f724a8fc1155ac00f84cab3a02258b1c48606281' 'sha256-a879c35162abb001bc233a025fb2ce71e441a5489992640149591dc58627b448' 'sha256-c14400657e4f7b55263afbd1c4d9f1ffa52c5edf52f8b5e98b01e7c7926eb075' 'sha256-c14400657e4f7b55263afbd1c4d9f1ffa52c5edf52f8b5e98b01e7c7926eb075' 'sha256-873babfc1a2ee58608ec80211584b1e0988b8da824545d4f8fc2000d92cfd8a3' 'sha256-91489471363973ee751bdd9b32b1d458fd131c2cf5609aa50b1379f549ec85b5' 'sha256-9028d950def4accddddfddb97ded654ecbbfa841089c1da3598c5fcd9a5d5103' 'sha256-4ef7b6efdc7b6ee429e602dc5b665cdd19768506acc0133535ebf96459a334e8' 'sha256-a05df7cd4396c227464ddb6a0aa35a3044f3a5794911e2e7ab79d335feb6a068'";
    # add_header Content-Security-Policy "default-src 'self';img-src 'self' https://s3angapp.s3.amazonaws.com/arrow-right-enter-signage-712850-small2.jpg;";
    # add_header Content-Security-Policy "default-src 'self';img-src 'self' https://s3angapp.s3.amazonaws.com/arrow-right-enter-signage-712850-small2.jpg;font-src data:;style-src 'self'";
}
