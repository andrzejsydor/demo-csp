# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  IMAGE_NAME_HUB: andrzejsydor/demo-csp
  IMAGE_NAME: demo-csp

jobs:
  push-hub-docker:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Build image
      run: docker build --file ci/Dockerfile --tag $IMAGE_NAME_HUB .

    - name: Log into registry
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u andrzejsydor --password-stdin

    - name: Push image Docker Hub
      run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_NAME_HUB=$IMAGE_NAME_HUB
          VERSION=$(date +%s)
          echo $VERSION
          docker tag $IMAGE_NAME_HUB $IMAGE_NAME_HUB:$VERSION
          docker push $IMAGE_NAME_HUB:$VERSION
          docker tag $IMAGE_NAME_HUB $IMAGE_NAME_HUB:latest
          docker push $IMAGE_NAME_HUB:latest

  push-packages:

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file ci/Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.CI_GITHUB }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

